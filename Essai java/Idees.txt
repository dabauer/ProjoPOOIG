n:y|y:m|m:x	
nous partons sur la base d'un jeu de domino double-six ,donc de 28 dominos
de 2 à 4 joueurs
on commence avec 7 dominos chacun
une classe Domino (ou pas à voir):
-tableau de 2d avec deux attributs ,deux getteurs pour gauche et droite de la piece
-il faut penser à la posisition des pieces (h ou v?)

,un classe jeu(nommée Domino?),une classe "sac" avec toutes les pièces possibles et disponibles et peut-être pour la gestion des dominos et une linked list de pièces(pas soucieuse de l'ordre donc pratique pour rajouter sur une des extrémités )

-Sac contient plusieurs Pieces(list de Pieces ?)

-une classe Tour et une class joueur 

Interface pièce?? --> méthodes communes à implémenter (exemple PieceDomino implémente piece,PiecePuzzle implémente pièce etc...)

-quand on pose une pièce,la pièce doit se souvenir de celle qui vient après et de son orientation(ses caractéristiques en général)
-4 connections par pièceDomino (problème avec gommettes car 6 connections possibles)
---> connection booléenne? 
haut,bas,gauche ,droite? Liste de connections ou attribut?  soit null soit next.val ,donc tant que la co est null ,on peut ajouter une pièce, 
si DéGauche=DéDroite alors vérifier si haut ou bas = null et la valeur 
-l'aurientation de la pièce n'est pas forcémet nécessaire,il faut surtout déterminer la tête et là queue (défini comme DéGauche et DéDroite dans mon code de la classe Piece)

-Dans interface Piece:
  .methode toString();
  .methode connection();
  .getteurs
  
  Pour le saboteur,soit la carte appartient à carte soit à pièce
Attributs PieceDomino:
-int i et int j pour les valeurs de la pièce
-4 private Piece haut,bas,gauche,droite (null ou next.val)
****************************************************
Attributs PieceDominoGommettes:
-int tG[s,c] et tD[s',c'] (signe,couleur)
-gauche ,droite,haut-gauche,bas-gauche,haut-droite,bas-droite,droite de type Piece
****************************************************
Attributs PiecePuzzle:
-int i,j,k,l (chaque chiffre caude une encoche(ou un bout) (null si bord ) (au plus 4 encoches)
-4 private Piece haut,bas,gauche,droite
*****************************************************
Attributs PieceSaboteur:
int i,j,k,l (chaque chiffre caude une encoche(ou un bout) (null si bord ) (au plus 4 connexions possibles)
-4 private Piece haut,bas,gauche,droite
